<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QCAQCGQk6f8BSipgqys3GcsAAAAASUVORK5CYII=
</value>
  </data>
</root>